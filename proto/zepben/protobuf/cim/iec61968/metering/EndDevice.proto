/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61968.metering";
package zepben.protobuf.cim.iec61968.metering;

import "zepben/protobuf/cim/iec61968/assets/AssetContainer.proto";

/**
 * Asset container that performs one or more end device functions. One type of end device is a meter which can
 * perform metering, load management, connect/disconnect, accounting functions, etc. Some end devices, such as ones
 * monitoring and controlling air conditioners, refrigerators, pool pumps may be connected to a meter. All end devices
 * may have communication capability defined by the associated communication function(s). An end device may be owned
 * by a consumer, a service provider, utility or otherwise.
 * <p>
 * There may be a related end device function that identifies a sensor or control point within a metering application
 * or communications systems (e.g., water, gas, electricity).
 * <p>
 * Some devices may use an optical port that conforms to the ANSI C12.18 standard for communications.
 */
message EndDevice {

    /**
     * AssetContainer fields for this EndDevice
     */
    assets.AssetContainer ac = 1;

    /**
     * Usage point to which this end device belongs. Repeated to handle cases where the UsagePoint is not
     * well defined and it could be one of many.
     */
    repeated string usagePointMRIDs = 2;

    /**
     * Reference to customer owning this end device.
     */
    string customerMRID = 3;

    /**
     * Service location whose service delivery is measured by this end device.
     */
    string serviceLocationMRID = 4;

    /**
     * All end device functions this end device performs.
     */
    repeated string endDeviceFunctionMRIDs = 5;

}
