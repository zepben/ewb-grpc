/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61968.metering";
package zepben.protobuf.cim.iec61968.metering;

import "zepben/protobuf/cim/iec61970/base/core/IdentifiedObject.proto";
import "zepben/protobuf/cim/iec61970/base/core/PhaseCode.proto";
import "google/protobuf/struct.proto";

/**
 * Logical or physical point in the network to which readings or events may be attributed. Used at the place where a physical
 * or virtual meter may be located; however, it is not required that a meter be present.
 */
message UsagePoint {

    /**
     * The IdentifiedObject fields for this UsagePoint
     */
    iec61970.base.core.IdentifiedObject io = 1;

    /**
     * Service location where the service delivered by this usage point is consumed.
     */
    oneof usagePointLocationMRID {
      google.protobuf.NullValue usagePointLocationMRIDNull = 2;
      string usagePointLocationMRIDSet = 3;
    }

    /**
     * All equipment connecting this usage point to the electrical grid.
     */
    repeated string equipmentMRIDs = 4;

    /**
     * All end devices at this usage point.
     */
    repeated string endDeviceMRIDs = 5;

    /**
     * If true, this usage point is virtual, i.e., no physical location exists in the network where a meter could be located to
     * collect the meter readings. For example, one may define a virtual usage point to serve as an aggregation of usage for all
     * of a company's premises distributed widely across the distribution territory. Otherwise, the usage point is physical,
     * i.e., there is a logical point in the network where a meter could be located to collect meter readings.
     */
    oneof isVirtual {
      google.protobuf.NullValue isVirtualNull = 6;
      bool isVirtualSet = 7;
    }

    /**
     * A code used to specify the connection category, e.g., low voltage or low pressure, where the usage point is defined.
     */
    oneof connectionCategory {
      google.protobuf.NullValue connectionCategoryNull = 8;
      string connectionCategorySet = 9;
    }

    /**
     * Active power that this usage point is configured to deliver in watts.
     */
    oneof ratedPower {
      google.protobuf.NullValue ratedPowerNull = 10;
      int32 ratedPowerSet = 11;
    }

    /**
     * [ZBEX] The approved inverter capacity at this UsagePoint in volt-amperes.
     */
    oneof approvedInverterCapacity {
      google.protobuf.NullValue approvedInverterCapacityNull = 12;
      int32 approvedInverterCapacitySet = 13;
    }

    /**
     * Phase code. Number of wires and specific nominal phases can be deduced from enumeration literal values. For example, ABCN is three-phase, four-wire,
     * s12n (splitSecondary12N) is single-phase, three-wire, and s1n and s2n are single-phase, two-wire.
     */
    iec61970.base.core.PhaseCode phaseCode = 9;

}
