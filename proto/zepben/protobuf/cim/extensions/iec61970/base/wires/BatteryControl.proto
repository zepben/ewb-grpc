/*
 * Copyright 2024 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.extensions.iec61970.base.wires";
package zepben.protobuf.cim.extensions.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/wires/RegulatingControl.proto";
import "zepben/protobuf/cim/extensions/iec61970/base/wires/BatteryControlMode.proto";
import "google/protobuf/struct.proto";

/**
 * [ZBEX] Describes behaviour specific to controlling batteries.
 */
message BatteryControl {

    /**
     * The RegulatingControl fields for this BatteryControl.
     */
    cim.iec61970.base.wires.RegulatingControl rc = 1;

    /**
     * [ZBEX] Charging rate (input power) in percentage of maxP. (Unit: PerCent)
     */
    oneof chargingRate {
      google.protobuf.NullValue chargingRateNull = 2;
      double chargingRateSet = 3;
    }

    /**
     * [ZBEX] Discharge rate (output power) in percentage of maxP. (Unit: PerCent)
     */
    oneof dischargingRate {
      google.protobuf.NullValue dischargingRateNull = 4;
      double dischargingRateSet = 5;
    }

    /**
     * [ZBEX] Percentage of the rated storage capacity that should be reserved during normal operations. This reserve acts as a safeguard, preventing the energy level
     * from dropping below this threshold under standard conditions. The field must be set to a non-negative value between 0 and 1. (Unit: PerCent)
     */
    oneof reservePercent {
      google.protobuf.NullValue reservePercentNull = 6;
      double reservePercentSet = 7;
    }

    /**
     * [ZBEX] Mode of operation for the dispatch (charging/discharging) function of BatteryControl.
     */
    BatteryControlMode controlMode = 8;

}
