/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
option csharp_namespace = "Zepben.Protobuf.CIM.IEC61970.Base.Wires";
package zepben.protobuf.cim.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/core/PowerSystemResource.proto";

/**
 * Mechanism for changing transformer winding tap positions.
 */
message TapChanger {

    /**
     * The PowerSystemResource fields for this Equipment.
     */
    core.PowerSystemResource psr = 1;

    /**
     * Highest possible tap step position, advance from neutral.
     * The attribute shall be greater than lowStep.
     * This tap position results in the maximum voltage boost on secondary winding(s).
     */
    int32 highStep = 2;

    /**
     * Lowest possible tap step position, retard from neutral.
     * This tap position results in the maximum voltage buck on secondary winding(s).
     */
    int32 lowStep = 3;

    /**
     * Tap changer position.
     * Starting step for a steady state solution. Non integer values are allowed to support continuous tap variables.
     * The reasons for continuous value are to support study cases where no discrete tap changers has yet been designed,
     * a solutions where a narrow voltage band force the tap step to oscillate or accommodate for a continuous solution as input.
     * The attribute shall be equal or greater than lowStep and equal or less than highStep.
     */
    double step = 4;

    /**
     * The neutral tap step position for this winding.
     * The attribute shall be equal or greater than lowStep and equal or less than highStep
     */
    int32 neutralStep = 5;

    /**
     * Voltage at which the winding operates at the neutral tap setting.
     */
    int32 neutralU = 6;

    /**
     * The tap step position used in "normal" network operation for this winding.
     * For a "Fixed" tap changer indicates the current physical tap setting.
     * The attribute shall be equal or greater than lowStep and equal or less than highStep.
     */
    int32 normalStep = 7;

    /**
     * Specifies the regulation status of the equipment.  True is regulating, false is not regulating.
     */
    bool controlEnabled = 8;

    /**
     * The regulating control scheme in which this tap changer participates.
     */
    string tapChangerControlMRID = 9;

}
