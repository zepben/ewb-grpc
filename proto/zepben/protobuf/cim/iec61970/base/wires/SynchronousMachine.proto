/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
package zepben.protobuf.cim.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/wires/RotatingMachine.proto";
import "zepben/protobuf/cim/iec61970/base/wires/SynchronousMachineKind.proto";
import "google/protobuf/struct.proto";

/**
 * An electromechanical device that operates with shaft rotating synchronously with the network. It is a single machine operating either as a generator or
 * synchronous condenser or pump.
 */
message SynchronousMachine {

    /**
     * The RotatingMachine fields for this SynchronousMachine.
     */
    RotatingMachine rm = 1;

    /**
     * Default base reactive power value in VAr. This value represents the initial reactive power that can be used by any application function.
     */
    oneof baseQ {
      google.protobuf.NullValue baseQNull = 2;
      double baseQSet = 3;
    }

    /**
     * Active power consumed (watts) when in condenser mode operation.
     */
    oneof condenserP {
      google.protobuf.NullValue condenserPNull = 4;
      int32 condenserPSet = 5;
    }

    /**
     * Indicates whether or not the generator is earthed. Used for short circuit data exchange according to IEC 60909.
     */
    oneof earthing {
      google.protobuf.NullValue earthingNull = 6;
      bool earthingSet = 7;
    }

    /**
     * Generator star point earthing resistance in Ohms (Re). Used for short circuit data exchange according to IEC 60909.
     */
    oneof earthingStarPointR {
      google.protobuf.NullValue earthingStarPointRNull = 8;
      double earthingStarPointRSet = 9;
    }

    /**
     * Generator star point earthing reactance in Ohms (Xe). Used for short circuit data exchange according to IEC 60909.
     */
    oneof earthingStarPointX {
      google.protobuf.NullValue earthingStarPointXNull = 10;
      double earthingStarPointXSet = 11;
    }

    /**
     * Steady-state short-circuit current (in A for the profile) of generator with compound excitation during 3-phase short circuit. - Ikk=0: Generator with no
     * compound excitation. - Ikk<>0: Generator with compound excitation. Ikk is used to calculate the minimum steady-state short-circuit current for generators
     * with compound excitation. (4.6.1.2 in IEC 60909-0:2001). Used only for single fed short circuit on a generator. (4.3.4.2. in IEC 60909-0:2001).
     */
    oneof ikk {
      google.protobuf.NullValue ikkNull = 12;
      double ikkSet = 13;
    }

    /**
     * Maximum reactive power limit in VAr. This is the maximum (nameplate) limit for the unit.
     */
    oneof maxQ {
      google.protobuf.NullValue maxQNull = 14;
      double maxQSet = 15;
    }

    /**
     * Maximum voltage limit for the unit in volts.
     */
    oneof maxU {
      google.protobuf.NullValue maxUNull = 16;
      int32 maxUSet = 17;
    }

    /**
     * Minimum reactive power limit for the unit in VAr.
     */
    oneof minQ {
      google.protobuf.NullValue minQNull = 18;
      double minQSet = 19;
    }

    /**
     * Minimum voltage limit for the unit in volts.
     */
    oneof minU {
      google.protobuf.NullValue minUNull = 20;
      int32 minUSet = 21;
    }

    /**
     * Factor to calculate the breaking current (Section 4.5.2.1 in IEC 60909-0). Used only for single fed short circuit on a generator (Section 4.3.4.2. in IEC 60909-0).
     */
    oneof mu {
      google.protobuf.NullValue muNull = 22;
      double muSet = 23;
    }

    /**
     * Equivalent resistance (RG) of generator as a percentage. RG is considered for the calculation of all currents, except for the calculation of the peak
     * current ip. Used for short circuit data exchange according to IEC 60909.
     */
    oneof r {
      google.protobuf.NullValue rNull = 24;
      double rSet = 25;
    }

    /**
     * Zero sequence resistance of the synchronous machine as a percentage.
     */
    oneof r0 {
      google.protobuf.NullValue r0Null = 26;
      double r0Set = 27;
    }

    /**
     * Negative sequence resistance as a percentage.
     */
    oneof r2 {
      google.protobuf.NullValue r2Null = 28;
      double r2Set = 29;
    }

    /**
     * Direct-axis subtransient reactance saturated as a percentage, also known as Xd"sat.
     */
    oneof satDirectSubtransX {
      google.protobuf.NullValue satDirectSubtransXNull = 30;
      double satDirectSubtransXSet = 31;
    }

    /**
     * Direct-axes saturated synchronous reactance (xdsat); reciprocal of short-circuit ration, as a percentage. Used for short circuit data exchange,
     * only for single fed short circuit on a generator. (4.3.4.2. in IEC 60909-0:2001).
     */
    oneof satDirectSyncX {
      google.protobuf.NullValue satDirectSyncXNull = 32;
      double satDirectSyncXSet = 33;
    }

    /**
     * Saturated Direct-axis transient reactance as a percentage. The attribute is primarily used for short circuit calculations according to ANSI.
     */
    oneof satDirectTransX {
      google.protobuf.NullValue satDirectTransXNull = 34;
      double satDirectTransXSet = 35;
    }

    /**
     * Zero sequence reactance of the synchronous machine as a percentage.
     */
    oneof x0 {
      google.protobuf.NullValue x0Null = 36;
      double x0Set = 37;
    }

    /**
     * Negative sequence reactance as a percentage.
     */
    oneof x2 {
      google.protobuf.NullValue x2Null = 38;
      double x2Set = 39;
    }

    /**
     * Modes that this synchronous machine can operate in.
     */
    SynchronousMachineKind type = 40;

    /**
     * Current mode of operation.
     */
    SynchronousMachineKind operatingMode = 41;

    /**
     * The available reactive capability curves for this synchronous machine. The first shall be the default for this SynchronousMachine.
     */
    repeated string reactiveCapabilityCurveMRIDs = 42;

}
