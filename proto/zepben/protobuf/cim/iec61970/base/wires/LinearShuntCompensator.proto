/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
package zepben.protobuf.cim.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/wires/ShuntCompensator.proto";
import "google/protobuf/struct.proto";

/**
 * A linear shunt compensator has banks or sections with equal admittance values.
 */
message LinearShuntCompensator {

    /**
     * ShuntCompensator fields for this LinearShuntCompensator.
     */
    ShuntCompensator sc = 1;

    /**
     * Zero sequence shunt (charging) susceptance per section
     */
    oneof b0PerSection {
      google.protobuf.NullValue b0PerSectionNull = 2;
      double b0PerSectionSet = 3;
    }

    /**
     * Positive sequence shunt (charging) susceptance per section
     */
    oneof bPerSection {
      google.protobuf.NullValue bPerSectionNull = 4;
      double bPerSectionSet = 5;
    }

    /**
     * Zero sequence shunt (charging) conductance per section
     */
    oneof g0PerSection {
      google.protobuf.NullValue g0PerSectionNull = 6;
      double g0PerSectionSet = 7;
    }

    /**
     * Positive sequence shunt (charging) conductance per section
     */
    oneof gPerSection {
      google.protobuf.NullValue gPerSectionNull = 8;
      double gPerSectionSet = 9;
    }

}
