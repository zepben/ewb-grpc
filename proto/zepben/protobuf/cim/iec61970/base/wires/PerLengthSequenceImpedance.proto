/*
 * Copyright 2020 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
package zepben.protobuf.cim.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/wires/PerLengthImpedance.proto";

/**
 * Sequence impedance and admittance parameters per unit length, for transposed lines of 1, 2, or 3 phases. For
 * 1-phase lines, define x=x0=xself. For 2-phase lines, define x=xs-xm and x0=xs+xm.
 */
message PerLengthSequenceImpedance {

    /**
     * PerLengthImpedance fields for this PerLengthSequenceImpedance.
     */
    PerLengthImpedance pli = 1;

    /**
     * Positive sequence series resistance, per unit of length.
     */
    double r = 2;

    /**
     * Positive sequence series reactance, per unit of length.
     */
    double x = 3;

    /**
     * Zero sequence series resistance, per unit of length.
     */
    double r0 = 4;

    /**
     * Zero sequence series reactance, per unit of length.
     */
    double x0 = 5;

    /**
     * Positive sequence shunt (charging) susceptance, per unit of length.
     */
    double bch = 6;

    /**
     * Zero sequence shunt (charging) susceptance, per unit of length.
     */
    double b0ch = 7;

    /**
     * Positive sequence shunt (charging) conductance, per unit of length.
     */
    double gch = 8;

    /**
     * Zero sequence shunt (charging) conductance, per unit of length.
     */
    double g0ch = 9;

}
