/*
 * Copyright 2021 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.equivalents";
package zepben.protobuf.cim.iec61970.base.equivalents;

import "zepben/protobuf/cim/iec61970/base/equivalents/EquivalentEquipment.proto";
import "google/protobuf/struct.proto";

/**
 * The class represents equivalent branches. In cases where a transformer phase shift is modelled and the EquivalentBranch is spanning
 * the same nodes, the impedance quantities for the EquivalentBranch shall consider the needed phase shift.
 */
message EquivalentBranch {

    /**
     * EquivalentEquipment fields for this EquivalentBranch.
     */
    EquivalentEquipment ee = 1;

    /*
     * Negative sequence series resistance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof negativeR12 {
      google.protobuf.NullValue negativeR12Null = 2;
      double negativeR12Set = 3;
    }

    /*
     * Negative sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof negativeR21 {
      google.protobuf.NullValue negativeR21Null = 4;
      double negativeR21Set = 5;
    }

    /*
     * Negative sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof negativeX12 {
      google.protobuf.NullValue negativeX12Null = 6;
      double negativeX12Set = 7;
    }

    /*
     * Negative sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. Usage: EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof negativeX21 {
      google.protobuf.NullValue negativeX21Null = 8;
      double negativeX21Set = 9;
    }

    /*
     * Positive sequence series resistance from terminal sequence 1 to terminal sequence 2 . Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof positiveR12 {
      google.protobuf.NullValue positiveR12Null = 10;
      double positiveR12Set = 11;
    }

    /*
     * Positive sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof positiveR21 {
      google.protobuf.NullValue positiveR21Null = 12;
      double positiveR21Set = 13;
    }

    /*
     * Positive sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof positiveX12 {
      google.protobuf.NullValue positiveX12Null = 14;
      double positiveX12Set = 15;
    }

    /*
     * Positive sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof positiveX21 {
      google.protobuf.NullValue positiveX21Null = 16;
      double positiveX21Set = 17;
    }

    /*
     * Positive sequence series resistance of the reduced branch.
     */
    oneof r {
      google.protobuf.NullValue rNull = 18;
      double rSet = 19;
    }

    /*
     * Resistance from terminal sequence 2 to terminal sequence 1 .Used for steady state power flow. This attribute is optional and represent
     * unbalanced network such as off-nominal phase shifter. If only EquivalentBranch.r is given, then EquivalentBranch.r21 is assumed equal
     * to EquivalentBranch.r. Usage rule : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof r21 {
      google.protobuf.NullValue r21Null = 120;
      double r21Set = 21;
    }

    /*
     * Positive sequence series reactance of the reduced branch.
     */
    oneof x {
      google.protobuf.NullValue xNull = 22;
      double xSet = 23;
    }

    /*
     * Reactance from terminal sequence 2 to terminal sequence 1. Used for steady state power flow. This attribute is optional and represents
     * an unbalanced network such as off-nominal phase shifter. If only EquivalentBranch.x is given, then EquivalentBranch.x21 is assumed
     * equal to EquivalentBranch.x. Usage rule: EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof x21 {
      google.protobuf.NullValue x21Null = 24;
      double x21Set = 25;
    }

    /*
     * Zero sequence series resistance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according to
     * IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof zeroR12 {
      google.protobuf.NullValue zeroR12Null = 26;
      double zeroR12Set = 27;
    }

    /*
     * Zero sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof zeroR21 {
      google.protobuf.NullValue zeroR21Null = 28;
      double zeroR21Set = 29;
    }

    /*
     * Zero sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof zeroX12 {
      google.protobuf.NullValue zeroX12Null = 30;
      double zeroX12Set = 31;
    }

    /*
     * Zero sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    oneof zeroX21 {
      google.protobuf.NullValue zeroX21Null = 32;
      double zeroX21Set = 33;
    }

}
