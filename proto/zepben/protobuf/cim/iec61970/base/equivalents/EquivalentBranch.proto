/*
 * Copyright 2021 Zeppelin Bend Pty Ltd
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.equivalents";
package zepben.protobuf.cim.iec61970.base.equivalents;

import "zepben/protobuf/cim/iec61970/base/equivalents/EquivalentEquipment.proto";

/**
 * The class represents equivalent branches. In cases where a transformer phase shift is modelled and the EquivalentBranch is spanning
 * the same nodes, the impedance quantities for the EquivalentBranch shall consider the needed phase shift.
 */
message EquivalentBranch {

    /**
     * EquivalentEquipment fields for this EquivalentBranch.
     */
    EquivalentEquipment ee = 1;

    /*
     * Negative sequence series resistance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double negativeR12 = 2;

    /*
     * Negative sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double negativeR21 = 3;

    /*
     * Negative sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double negativeX12 = 4;

    /*
     * Negative sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. Usage: EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double negativeX21 = 5;

    /*
     * Positive sequence series resistance from terminal sequence 1 to terminal sequence 2 . Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double positiveR12 = 6;

    /*
     * Positive sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double positiveR21 = 7;

    /*
     * Positive sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double positiveX12 = 8;

    /*
     * Positive sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according
     * to IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double positiveX21 = 9;

    /*
     * Positive sequence series resistance of the reduced branch.
     */
    double r = 10;

    /*
     * Resistance from terminal sequence 2 to terminal sequence 1 .Used for steady state power flow. This attribute is optional and represent
     * unbalanced network such as off-nominal phase shifter. If only EquivalentBranch.r is given, then EquivalentBranch.r21 is assumed equal
     * to EquivalentBranch.r. Usage rule : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double r21 = 11;

    /*
     * Positive sequence series reactance of the reduced branch.
     */
    double x = 12;

    /*
     * Reactance from terminal sequence 2 to terminal sequence 1. Used for steady state power flow. This attribute is optional and represents
     * an unbalanced network such as off-nominal phase shifter. If only EquivalentBranch.x is given, then EquivalentBranch.x21 is assumed
     * equal to EquivalentBranch.x. Usage rule: EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double x21 = 13;

    /*
     * Zero sequence series resistance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according to
     * IEC 60909. EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double zeroR12 = 14;

    /*
     * Zero sequence series resistance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double zeroR21 = 15;

    /*
     * Zero sequence series reactance from terminal sequence 1 to terminal sequence 2. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double zeroX12 = 16;

    /*
     * Zero sequence series reactance from terminal sequence 2 to terminal sequence 1. Used for short circuit data exchange according to
     * IEC 60909. Usage : EquivalentBranch is a result of network reduction prior to the data exchange.
     */
    double zeroX21 = 17;

}
